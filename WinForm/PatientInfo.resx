<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eRsAAAAASUVORK5CYII=
</value>
  </data>
</root>